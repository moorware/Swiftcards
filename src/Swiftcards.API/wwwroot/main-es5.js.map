{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/helpers/must-match.directive.ts","webpack:///src/app/helpers/must-match.validator.ts","webpack:///src/app/helpers/token.interceptor.ts","webpack:///src/app/layout/auth/signin/signin.component.html","webpack:///src/app/layout/auth/signin/signin.component.ts","webpack:///src/app/layout/auth/signup/signup.component.html","webpack:///src/app/layout/auth/signup/signup.component.ts","webpack:///src/app/layout/card/card.component.html","webpack:///src/app/layout/card/card.component.ts","webpack:///src/app/layout/header/header.component.html","webpack:///src/app/layout/header/header.component.ts","webpack:///src/app/layout/home/home.component.html","webpack:///src/app/layout/home/home.component.ts","webpack:///src/app/layout/profile/cards-list/cards-list.component.html","webpack:///src/app/layout/profile/cards-list/cards-list.component.ts","webpack:///src/app/layout/profile/cards-new/cards-new.component.html","webpack:///src/app/layout/profile/cards-new/cards-new.component.ts","webpack:///src/app/layout/profile/delete-dialog/delete-dialog.component.html","webpack:///src/app/layout/profile/delete-dialog/delete-dialog.component.ts","webpack:///src/app/layout/profile/link-dialog/link-dialog.component.html","webpack:///src/app/layout/profile/link-dialog/link-dialog.component.ts","webpack:///src/app/layout/profile/profile.component.html","webpack:///src/app/layout/profile/profile.component.ts","webpack:///src/app/models/card.ts","webpack:///src/app/models/link.ts","webpack:///src/app/models/user.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/card.service.ts","webpack:///src/app/services/hide.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/services/wait.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","waitService","hideService","userService","title","localStorage","getItem","currentUser","routes","path","pathMatch","component","AppModule","MustMatchDirective","mustMatch","formGroup","MustMatch","controlName","matchingControlName","control","controls","matchingControl","errors","value","setErrors","TokenInterceptor","next","token","_req","clone","setHeaders","Authorization","handle","AuthenticateModel","name","password","SigninComponent","router","authService","error","model","hide","navigate","loading","signIn","subscribe","data","setItem","get","user","status","RegisterModel","confirmPassword","SignupComponent","signUp","CardComponent","activatedRoute","cardService","currentCard","card","snapshot","params","url","startsWith","window","open","HeaderComponent","HomeComponent","CardsListComponent","clipboard","snackBar","dialog","onZeroCreate","isEditing","editing","index","link","copy","location","origin","duration","editingCard","Object","assign","links","i","length","emit","cardIndex","dialogRef","width","disableClose","cards","afterClosed","result","splice","logOut","linkIndex","editForm","edit","validateLinksForm","update","CardsNewComponent","onResize","event","selectedIndex","linksForm","linkForm","valid","create","unshift","enable","hasError","mobile","innerWidth","DeleteDialogComponent","close","LinkDialogComponent","_data","ProfileComponent","tabIndex","onLogOut","Card","annotation","Link","User","AuthService","http","post","CardService","HideService","UserService","removeItem","WaitService","environment","production","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","<app-header class=\"solid\" *ngIf=\"!hideService.hide\"></app-header>\r\n\r\n<mat-progress-bar class=\"solid\" [style.visibility]=\"waitService.loading ? 'visible' : 'hidden'\" mode=\"indeterminate\" color=\"accent\"></mat-progress-bar>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n<div class=\"spacer\"></div>\r\n\r\n<div *ngIf=\"!hideService.hide\" class=\"signature solid noselect\">Copyright © 2020 | by moorware | <a class=\"link\" href=\"https://github.com/moorware\" target=\"_blank\">GitHub</a></div>","import { Component } from '@angular/core';\r\nimport { WaitService } from './services/wait.service';\r\nimport { HideService } from './services/hide.service';\r\nimport { UserService } from './services/user.service';\r\nimport { User } from './models/user';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'swiftcards-client';\r\n\r\n  constructor(\r\n    public waitService: WaitService,\r\n    public hideService: HideService,\r\n    private userService: UserService\r\n  ) {\r\n    if (localStorage.getItem('auth_token'))\r\n      this.userService.currentUser = new User();\r\n  }\r\n}\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MustMatchDirective } from './helpers/must-match.directive';\r\nimport { HeaderComponent } from './layout/header/header.component';\r\nimport { HomeComponent } from './layout/home/home.component';\r\nimport { SignupComponent } from './layout/auth/signup/signup.component';\r\nimport { SigninComponent } from './layout/auth/signin/signin.component';\r\nimport { ProfileComponent } from './layout/profile/profile.component';\r\nimport { TokenInterceptor } from './helpers/token.interceptor';\r\nimport { CardsListComponent } from './layout/profile/cards-list/cards-list.component';\r\nimport { CardsNewComponent } from './layout/profile/cards-new/cards-new.component';\r\nimport { CardComponent } from './layout/card/card.component';\r\nimport { LinkDialogComponent } from './layout/profile/link-dialog/link-dialog.component';\r\nimport { DeleteDialogComponent } from './layout/profile/delete-dialog/delete-dialog.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', component: HomeComponent },\r\n  { path: 'signin', component: SigninComponent },\r\n  { path: 'signup', component: SignupComponent },\r\n  { path: 'me', component: ProfileComponent },\r\n  { path: ':link', component: CardComponent },\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MustMatchDirective,\r\n    HeaderComponent,\r\n    HomeComponent,\r\n    SignupComponent,\r\n    SigninComponent,\r\n    ProfileComponent,\r\n    CardsListComponent,\r\n    CardsNewComponent,\r\n    CardComponent,\r\n    LinkDialogComponent,\r\n    DeleteDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot(routes),\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatStepperModule,\r\n    MatChipsModule,\r\n    MatDialogModule,\r\n    MatProgressBarModule,\r\n    MatCardModule,\r\n    MatExpansionModule,\r\n    MatSnackBarModule,\r\n    ClipboardModule\r\n  ],\r\n  entryComponents: [\r\n    LinkDialogComponent,\r\n    DeleteDialogComponent\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Directive, Input } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, ValidationErrors, FormGroup } from '@angular/forms';\r\n\r\nimport { MustMatch } from './must-match.validator';\r\n\r\n@Directive({\r\n    selector: '[mustMatch]',\r\n    providers: [{ provide: NG_VALIDATORS, useExisting: MustMatchDirective, multi: true }]\r\n})\r\nexport class MustMatchDirective implements Validator {\r\n    @Input('mustMatch') mustMatch: string[] = [];\r\n\r\n    validate(formGroup: FormGroup): ValidationErrors {\r\n        return MustMatch(this.mustMatch[0], this.mustMatch[1])(formGroup);\r\n    }\r\n}","import { FormGroup } from '@angular/forms';\r\n\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (!control || !matchingControl) {\r\n          return null;\r\n        }\r\n        \r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            return null;\r\n        }\r\n        \r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor\r\n{\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const token = localStorage.getItem(\"auth_token\");\r\n\r\n        if (token) {\r\n            const _req = req.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            })\r\n\r\n            return next.handle(_req);\r\n        }\r\n        else {\r\n            return next.handle(req);\r\n        }\r\n    }\r\n}\r\n","<div class=\"view\">\r\n    <div class=\"auth__inner\">\r\n        <div class=\"auth__title\">\r\n            Sign in\r\n        </div>\r\n        <div class=\"auth__annotation\">\r\n            New user? <a routerLink=\"/signup\" class=\"auth__register\">Create an account</a>\r\n        </div>\r\n        <form class=\"auth__form\" #signinForm=\"ngForm\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\r\n            <mat-form-field class=\"auth__field\" appearance=\"fill\">\r\n                <mat-label>Username</mat-label>\r\n                <input [disabled]=\"waitService.loading\" matInput #name=\"ngModel\" id=\"name\" name=\"name\" [(ngModel)]=\"model.name\" (ngModelChange)=\"onChange()\" required >\r\n                <mat-error *ngIf=\"(name.dirty || name.touched) && name.errors?.required\">Username is required</mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"auth__field\" appearance=\"fill\">\r\n                <mat-label>Password</mat-label>\r\n\r\n                <input [disabled]=\"waitService.loading\" type=\"password\" matInput #password=\"ngModel\" id=\"password\" name=\"password\" [(ngModel)]=\"model.password\" (ngModelChange)=\"onChange()\" required >\r\n                <mat-error *ngIf=\"(password.dirty || password.touched) && password.errors?.required\">Password is required</mat-error>\r\n            </mat-form-field>\r\n\r\n            <div class=\"auth__spacer\"></div>\r\n\r\n            <div class=\"auth__row\">\r\n                <button class=\"auth__submit\" mat-raised-button color=\"primary\" [disabled]=\"model.name === '' || model.password === '' || waitService.loading\">Sign in</button>\r\n                <div class=\"auth__error\">{{error}}</div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../../../models/user';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { WaitService } from 'src/app/services/wait.service';\r\nimport { HideService } from 'src/app/services/hide.service';\r\n\r\nexport class AuthenticateModel {\r\n  public name: string = '';\r\n  public password: string = '';\r\n}\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  styleUrls: ['../auth.css'],\r\n  templateUrl: './signin.component.html'\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  public error: string = null;\r\n  public model: AuthenticateModel = new AuthenticateModel();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public waitService: WaitService,\r\n    private authService: AuthService,\r\n    private userService: UserService,\r\n    private hideService: HideService\r\n    ) {\r\n      this.hideService.hide = false;\r\n      \r\n      if (this.userService.currentUser) {\r\n        this.router.navigate(['me']);\r\n      }\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  onSubmit() {\r\n    this.waitService.loading = true;\r\n\r\n    this.authService.signIn(this.model).subscribe((data: any) => {\r\n      localStorage.setItem('auth_token', data.token);\r\n\r\n      this.userService.get().subscribe((user: User) => {\r\n        this.userService.currentUser = user;\r\n        this.router.navigate(['me']);\r\n        this.waitService.loading = false;\r\n      }, () => {\r\n        this.userService.currentUser = null;\r\n        this.waitService.loading = false;\r\n      });\r\n    }, (error: HttpErrorResponse) => {\r\n      if (error.status === 400)\r\n        this.error = `Username or password is incorrect!`;\r\n\r\n        this.waitService.loading = false;\r\n    });\r\n  }\r\n\r\n  onChange() {\r\n    if (this.error)\r\n      this.error = null;\r\n  }\r\n}\r\n","<div class=\"view\">\r\n    <div class=\"auth__inner\">\r\n        <div class=\"auth__title\">\r\n            Sign up\r\n        </div>\r\n        <div class=\"auth__annotation\">\r\n            Have an account? <a routerLink=\"/signin\" class=\"auth__register\">Sign in</a>\r\n        </div>\r\n        <form class=\"auth__form\" #signupForm=\"ngForm\" (ngSubmit)=\"onSubmit()\" [mustMatch]=\"['password', 'confirmPassword']\" autocomplete=\"off\">\r\n            <mat-form-field class=\"auth__field\" appearance=\"fill\">\r\n                <mat-label>Username</mat-label>\r\n\r\n                <input [disabled]=\"waitService.loading\" matInput #name=\"ngModel\" id=\"name\" name=\"name\" pattern=\"[a-zA-Z0-9._]*\" [(ngModel)]=\"model.name\" (ngModelChange)=\"onNameChange()\" minlength=\"4\" maxlength=\"15\" required >\r\n                \r\n                <mat-error *ngIf=\"(name.dirty || name.touched) && name.errors?.required\">Username is required</mat-error>\r\n                <mat-error *ngIf=\"(name.dirty || name.touched) && name.errors?.pattern && !name.errors?.required\">Username contains invalid characters</mat-error>\r\n                <mat-error *ngIf=\"(name.dirty || name.touched) && name.errors?.minlength && !(name.errors?.required || name.errors?.pattern)\">Username must be at least 4 characters long</mat-error>\r\n                <mat-error *ngIf=\"(name.dirty || name.touched) && name.errors?.maxlength && !name.errors?.pattern\">Username must not be longer than 15 characters</mat-error>\r\n                \r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"auth__field\" appearance=\"fill\">\r\n                <mat-label>Password</mat-label>\r\n\r\n                <input [disabled]=\"waitService.loading\" type=\"password\" matInput #password=\"ngModel\" id=\"password\" name=\"password\" [(ngModel)]=\"model.password\" minlength=\"6\" maxlength=\"30\" required >\r\n                \r\n                <mat-error *ngIf=\"(password.dirty || password.touched) && password.errors?.required\">Password is required</mat-error>\r\n                <mat-error *ngIf=\"(password.dirty || password.touched) && password.errors?.minlength && !password.errors?.required\">Password must be at least 6 characters long</mat-error>\r\n                <mat-error *ngIf=\"(password.dirty || password.touched) && password.errors?.maxlength\">Password must not be longer than 30 characters</mat-error>\r\n                \r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"auth__field\" appearance=\"fill\">\r\n                <mat-label>Confirm password</mat-label>\r\n\r\n                <input [disabled]=\"waitService.loading\" type=\"password\" matInput #confirmPassword=\"ngModel\" id=\"confirmPassword\" name=\"confirmPassword\" [(ngModel)]=\"model.confirmPassword\" required >\r\n                \r\n                <mat-error *ngIf=\"(confirmPassword.dirty || confirmPassword.touched) && (confirmPassword.errors?.mustMatch || confirmPassword.errors?.required)\">Passwords do not match</mat-error>\r\n            </mat-form-field>\r\n\r\n            <div class=\"auth__spacer\"></div>\r\n\r\n            <div class=\"auth__row\">\r\n                <button class=\"auth__submit\" mat-raised-button color=\"primary\" [disabled]=\"signupForm.invalid || waitService.loading\">Sign up</button>\r\n                <div class=\"auth__error\">{{error}}</div>\r\n            </div>\r\n\r\n            \r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../../../models/user';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { WaitService } from 'src/app/services/wait.service';\r\nimport { HideService } from 'src/app/services/hide.service';\r\n\r\nexport class RegisterModel {\r\n  public name: string = '';\r\n  public password: string = '';\r\n  public confirmPassword: string = '';\r\n}\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  styleUrls: ['../auth.css'],\r\n  templateUrl: './signup.component.html'\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  public error: string = null;\r\n  public model: RegisterModel = new RegisterModel();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public waitService: WaitService,\r\n    private authService: AuthService,\r\n    private userService: UserService,\r\n    private hideService: HideService\r\n  ) {\r\n    this.hideService.hide = false;\r\n    if (this.userService.currentUser) {\r\n      this.router.navigate(['me']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    this.waitService.loading = true;\r\n\r\n    this.authService.signUp(this.model).subscribe((data: any) => {\r\n      localStorage.setItem('auth_token', data.token);\r\n\r\n      this.userService.get().subscribe((user: User) => {\r\n        this.userService.currentUser = user;\r\n        this.router.navigate(['me']);\r\n        this.waitService.loading = false;\r\n      }, () => {\r\n        this.userService.currentUser = null;\r\n        this.waitService.loading = false;\r\n      });\r\n\r\n    }, (error: HttpErrorResponse) => {\r\n      if (error.status === 400)\r\n        this.error = `Username '${this.model.name}' is already taken!`;\r\n\r\n      this.waitService.loading = false;\r\n    });\r\n  }\r\n\r\n  onNameChange() {\r\n    if (this.error)\r\n      this.error = null;\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n    <mat-card *ngIf=\"card\" class=\"card__inner\">\r\n        <mat-card-title>{{card.name}}</mat-card-title>\r\n        <mat-card-subtitle>{{card.annotation}}</mat-card-subtitle>\r\n        <mat-card-content>\r\n            <mat-chip-list>\r\n                <mat-chip href *ngFor=\"let link of card.links\" color=\"primary\" selected (click)=\"onLinkOpen(link.url)\">\r\n                    <span>{{link.title}}</span>\r\n                </mat-chip>\r\n            </mat-chip-list>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Card } from 'src/app/models/card';\r\nimport { CardService } from 'src/app/services/card.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { HideService } from 'src/app/services/hide.service';\r\nimport { WaitService } from 'src/app/services/wait.service';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.css']\r\n})\r\nexport class CardComponent implements OnInit {\r\n  public card: Card;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private cardService: CardService,\r\n    private hideService: HideService,\r\n    private waitService: WaitService\r\n  ) {\r\n    this.hideService.hide = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.cardService.currentCard) {\r\n      this.card = this.cardService.currentCard;\r\n      this.cardService.currentCard = null;\r\n    }\r\n    else {\r\n      this.waitService.loading = true;\r\n      this.cardService.get(this.activatedRoute.snapshot.params['link']).subscribe((data: Card) => {\r\n        this.card = data;\r\n        this.waitService.loading = false;\r\n      }, () => {\r\n        this.router.navigate(['']);\r\n        this.waitService.loading = false;\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  onLinkOpen(url) {\r\n    if (!url.startsWith('http://') && !url.startsWith('https://'))\r\n      url = 'http://' + url;\r\n\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n}\r\n","<div class=\"mat-elevation-z6\">\r\n    <mat-toolbar color=\"primary\">\r\n        <mat-toolbar-row>\r\n            <div class=\"header\">\r\n                <a routerLink=\"\">Swiftcards</a>\r\n\r\n                <a *ngIf=\"!userService.currentUser\" class=\"account\" routerLink=\"signin\">\r\n                    <span>Sign in</span>\r\n                    <div class=\"account__icon\">\r\n                        <mat-icon>account_circle</mat-icon>\r\n                    </div>\r\n                </a>\r\n\r\n                <a *ngIf=\"userService.currentUser\" class=\"account\" routerLink=\"me\">\r\n                    <span>{{userService.currentUser.name}}</span>\r\n                    <div class=\"account__icon\">\r\n                        <mat-icon>account_circle</mat-icon>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n        </mat-toolbar-row>\r\n    </mat-toolbar>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  styleUrls: [ './header.component.css' ],\r\n  templateUrl: './header.component.html'\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor(public userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"view\">\r\n    <div class=\"home__inner\">\r\n        <div class=\"home__title\">\r\n            Swiftcards\r\n        </div>\r\n        <div class=\"home__annotation\">\r\n            This website is a service for creating pages with your contact links.\r\n        </div>\r\n        <button routerLink=\"signup\" mat-raised-button class=\"start-button\" color=\"primary\">Get started</button>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { HideService } from 'src/app/services/hide.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  styleUrls: [ './home.component.css' ],\r\n  templateUrl: './home.component.html'\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private userService: UserService,\r\n    private hideService: HideService\r\n    ) {\r\n      this.hideService.hide = false;\r\n      \r\n    if (this.userService.currentUser) {\r\n      this.router.navigate(['me']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"zero\" *ngIf=\"userService.currentUser.cards.length === 0\">\r\n    <div class=\"zero__title\">\r\n        There are no cards yet!\r\n    </div>\r\n    <button class=\"zero__create\" mat-raised-button color=\"primary\" (click)=\"onZeroCreate.emit()\">\r\n        Create new card\r\n    </button>\r\n</div>\r\n\r\n<div class=\"list\" *ngIf=\"userService.currentUser.cards.length > 0\">\r\n    <mat-accordion>\r\n        <mat-expansion-panel [disabled]=\"editing\"\r\n            *ngFor=\"let card of userService.currentUser.cards; let i = index; trackBy: trackByIndex\">\r\n            <mat-expansion-panel-header>\r\n                <mat-panel-title>/{{card.link}}</mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n\r\n            <mat-card *ngIf=\"!editing\">\r\n                <mat-card-title>\r\n                    <div class=\"card-name\">\r\n                        {{card.name}}\r\n                    </div>\r\n                    <div class=\"delete-button mobile\">\r\n                        <mat-icon class=\"delete-icon\" (click)=\"onDelete(i)\">delete</mat-icon>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-subtitle>{{card.annotation}}</mat-card-subtitle>\r\n                <mat-card-content>\r\n                    <mat-chip-list>\r\n                        <mat-chip href *ngFor=\"let link of card.links\" color=\"primary\" selected\r\n                            (click)=\"onLinkOpen(link.url)\">\r\n                            <span>{{link.title}}</span>\r\n                        </mat-chip>\r\n                    </mat-chip-list>\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button mat-button (click)=\"onOpen(card)\">OPEN</button>\r\n                    <button mat-button (click)=\"onCopyURL(card.link)\">COPY URL</button>\r\n                    <button class=\"last\" mat-button (click)=\"onEdit(card)\">EDIT</button>\r\n                    <div class=\"spacer\"></div>\r\n                    <div class=\"delete-button desktop\">\r\n                        <button class=\"last\" mat-button (click)=\"onDelete(i)\">\r\n                            <mat-icon>delete</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n\r\n            <mat-card *ngIf=\"editing\">\r\n                <form #editForm=\"ngForm\" autocomplete=\"off\">\r\n                    <mat-card-subtitle>Edit info</mat-card-subtitle>\r\n                    <mat-form-field>\r\n                        <mat-label>Name</mat-label>\r\n                        <input matInput required maxlength=\"20\" name=\"name\" [(ngModel)]=\"editingCard.name\"\r\n                            #name=\"ngModel\" [disabled]=\"waitService.loading\">\r\n                        <mat-hint align=\"end\">{{editingCard.name.length}} / 20</mat-hint>\r\n                        <mat-error *ngIf=\"(name.dirty || name.touched) && name.errors?.required\">Name is required\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"(name.dirty || name.touched) && name.errors?.maxlength\">Name must not be\r\n                            longer\r\n                            than 20 characters</mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <mat-label>Annotation</mat-label>\r\n                        <input matInput required maxlength=\"80\" name=\"annotation\" [(ngModel)]=\"editingCard.annotation\"\r\n                            #annotation=\"ngModel\" [disabled]=\"waitService.loading\">\r\n                        <mat-hint align=\"end\">{{editingCard.annotation.length}} / 80</mat-hint>\r\n\r\n                        <mat-error *ngIf=\"(annotation.dirty || annotation.touched) && annotation.errors?.required\">\r\n                            Annotation is\r\n                            required</mat-error>\r\n                        <mat-error *ngIf=\"(annotation.dirty || annotation.touched) && annotation.errors?.maxlength\">\r\n                            Annotation\r\n                            must not be longer than 80 characters</mat-error>\r\n                    </mat-form-field>\r\n                    <div class=\"links-space\"></div>\r\n                    <mat-card-subtitle>Edit links</mat-card-subtitle>\r\n                    <mat-chip-list>\r\n                        <mat-chip *ngFor=\"let link of editingCard.links; index as j\" color=\"primary\" selected\r\n                            (click)=\"editLink(j, editForm)\">\r\n                            <span>{{link.title}}</span>\r\n                            <div class=\"edit-icon\">\r\n                                <mat-icon>edit</mat-icon>\r\n                            </div>\r\n                        </mat-chip>\r\n                        <mat-chip color=\"accent\" (click)=\"editLink(editingCard.links.length, editForm)\">\r\n                            <span>Add link</span>\r\n                        </mat-chip>\r\n                    </mat-chip-list>\r\n                </form>\r\n                <mat-card-actions>\r\n                    <button mat-button (click)=\"onSave(i)\"\r\n                        [disabled]=\"editForm.invalid || waitService.loading\">SAVE</button>\r\n                    <button mat-button (click)=\"onCancel()\" [disabled]=\"waitService.loading\">CANCEL</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n        </mat-expansion-panel>\r\n    </mat-accordion>\r\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { WaitService } from 'src/app/services/wait.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Clipboard } from '@angular/cdk/clipboard';\r\nimport { CardService } from 'src/app/services/card.service';\r\nimport { Card } from 'src/app/models/card';\r\nimport { Router } from '@angular/router';\r\nimport { Link } from 'src/app/models/link';\r\nimport { LinkDialogComponent } from '../link-dialog/link-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { NgForm } from '@angular/forms';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { DeleteDialogComponent } from '../delete-dialog/delete-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-cards-list',\r\n  styleUrls: ['./cards-list.component.css'],\r\n  templateUrl: './cards-list.component.html'\r\n})\r\nexport class CardsListComponent implements OnInit {\r\n  @Output() onZeroCreate = new EventEmitter();\r\n  @Output() isEditing = new EventEmitter<boolean>();\r\n\r\n  public editing: boolean = false;\r\n  public editingCard: Card;\r\n\r\n  constructor(\r\n    public userService: UserService,\r\n    public waitService: WaitService,\r\n    private cardService: CardService,\r\n    private router: Router,\r\n    private clipboard: Clipboard,\r\n    private snackBar: MatSnackBar,\r\n    public dialog: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  trackByIndex(index: number): any {\r\n    return index;\r\n  }\r\n\r\n  onOpen(card: Card) {\r\n    this.cardService.currentCard = card;\r\n    this.router.navigate([card.link]);\r\n  }\r\n\r\n  onCopyURL(link: string) {\r\n    this.clipboard.copy(window.location.origin + '/' + link);\r\n\r\n    this.snackBar.open('Link copied to clipboard!', null, {\r\n      duration: 2000,\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  onEdit(card: Card) {\r\n    this.editingCard = Object.assign({}, card);\r\n    this.editingCard.links = [];\r\n\r\n    var i;\r\n    for (i = 0; i < card.links.length; i++) {\r\n      this.editingCard.links[i] = Object.assign({}, card.links[i]);\r\n    }\r\n\r\n    this.editing = true;\r\n    this.isEditing.emit(this.editing);\r\n  }\r\n\r\n  onDelete(cardIndex: number) {\r\n\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      width: '300px',\r\n      disableClose: true,\r\n      data: this.userService.currentUser.cards[cardIndex].name\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.isEditing.emit(true);\r\n        this.waitService.loading = true;\r\n\r\n        this.cardService.delete(this.userService.currentUser.cards[cardIndex].link).subscribe(() => {\r\n          this.userService.currentUser.cards.splice(cardIndex, 1);\r\n\r\n          this.waitService.loading = false;\r\n          this.isEditing.emit(false);\r\n        }, (error: HttpErrorResponse) => {\r\n          this.waitService.loading = false;\r\n\r\n          if (error.status === 400 || error.status === 404)\r\n            this.userService.logOut();\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  onLinkOpen(url: string) {\r\n    if (!url.startsWith('http://') && !url.startsWith('https://'))\r\n      url = 'http://' + url;\r\n\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  editLink(linkIndex: number, editForm: NgForm) {\r\n    if (!this.waitService.loading) {\r\n\r\n      let edit = true;\r\n\r\n      if (this.editingCard.links.length === linkIndex) {\r\n        edit = false;\r\n      }\r\n\r\n      const dialogRef = this.dialog.open(LinkDialogComponent, {\r\n        width: '300px',\r\n        disableClose: true,\r\n        data: { model: edit ? Object.assign({}, this.editingCard.links[linkIndex]) : new Link(), edit: edit }\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if (result) {\r\n          if (result.model)\r\n            this.editingCard.links[linkIndex] = result.model;\r\n          else\r\n            this.editingCard.links.splice(linkIndex, 1);\r\n\r\n          this.validateLinksForm(editForm);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  validateLinksForm(editForm: NgForm) {\r\n    if (this.editingCard.links.length < 1)\r\n      editForm.control.setErrors({ 'incorrect': true });\r\n    else\r\n      editForm.control.setErrors(null);\r\n  }\r\n\r\n  onCancel() {\r\n    this.editingCard = null;\r\n    this.editing = false;\r\n    this.isEditing.emit(this.editing);\r\n  }\r\n\r\n  onSave(cardIndex: number) {\r\n    this.waitService.loading = true;\r\n\r\n    this.cardService.update(this.editingCard).subscribe(() => {\r\n      this.userService.currentUser.cards[cardIndex] = Object.assign({}, this.editingCard);\r\n      this.userService.currentUser.cards[cardIndex].links = [];\r\n\r\n      var i;\r\n      for (i = 0; i < this.editingCard.links.length; i++) {\r\n        this.userService.currentUser.cards[cardIndex].links[i] = Object.assign({}, this.editingCard.links[i]);\r\n      }\r\n\r\n      this.waitService.loading = false;\r\n\r\n      this.editingCard = null;\r\n      this.editing = false;\r\n      this.isEditing.emit(this.editing);\r\n    }, (error: HttpErrorResponse) => {\r\n      this.waitService.loading = false;\r\n\r\n      if (error.status === 404)\r\n        this.userService.logOut();\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-horizontal-stepper *ngIf=\"!mobile\" [linear]=\"true\" (selectionChange)=\"onStepperSelectionChange($event)\">\r\n    <mat-step [stepControl]=\"nameForm\">\r\n        <form class=\"step-form\" #nameForm=\"ngForm\" autocomplete=\"off\">\r\n            <ng-template matStepLabel>Fill out name</ng-template>\r\n            <mat-form-field>\r\n                <mat-label>Name</mat-label>\r\n                <input matInput required maxlength=\"20\" id=\"name\" name=\"name\" [(ngModel)]=\"model.name\"\r\n                    #name=\"ngModel\" [disabled]=\"waitService.loading\">\r\n                <mat-hint align=\"start\">Full name or nickname</mat-hint>\r\n                <mat-hint align=\"end\">{{model.name.length}} / 20</mat-hint>\r\n                <mat-error *ngIf=\"(name.dirty || name.touched) && name.errors?.required\">Name is required\r\n                </mat-error>\r\n                <mat-error *ngIf=\"(name.dirty || name.touched) && name.errors?.maxlength\">Name must not be longer\r\n                    than 20 characters</mat-error>\r\n            </mat-form-field>\r\n            <div class=\"step-nav\">\r\n                <button mat-button matStepperNext>Next</button>\r\n            </div>\r\n        </form>\r\n    </mat-step>\r\n    <mat-step [stepControl]=\"annotationForm\">\r\n        <form class=\"step-form\" #annotationForm=\"ngForm\" autocomplete=\"off\">\r\n            <ng-template matStepLabel>Fill out annotation</ng-template>\r\n            <mat-form-field>\r\n                <mat-label>Annotation</mat-label>\r\n                <input matInput required maxlength=\"80\" id=\"annotation\" name=\"annotation\" [(ngModel)]=\"model.annotation\"\r\n                    #annotation=\"ngModel\" [disabled]=\"waitService.loading\">\r\n                <mat-hint align=\"start\">Speciality, profession, etc.</mat-hint>\r\n                <mat-hint align=\"end\">{{model.annotation.length}} / 80</mat-hint>\r\n\r\n                <mat-error *ngIf=\"(annotation.dirty || annotation.touched) && annotation.errors?.required\">Annotation is\r\n                    required</mat-error>\r\n                <mat-error *ngIf=\"(annotation.dirty || annotation.touched) && annotation.errors?.maxlength\">Annotation\r\n                    must not be longer than 80 characters</mat-error>\r\n            </mat-form-field>\r\n            <div class=\"step-nav\">\r\n                <button mat-button matStepperPrevious>Back</button>\r\n                <button mat-button matStepperNext>Next</button>\r\n            </div>\r\n        </form>\r\n    </mat-step>\r\n    <mat-step [stepControl]=\"linksForm\">\r\n        <form class=\"step-form\" #linksForm=\"ngForm\" autocomplete=\"off\">\r\n            <ng-template matStepLabel>Add links</ng-template>\r\n\r\n            <mat-chip-list>\r\n                <mat-chip *ngFor=\"let link of model.links; index as i\" color=\"primary\" selected (click)=\"editLink(i)\">\r\n                    <span>{{link.title}}</span>\r\n                    <div class=\"edit-icon\">\r\n                        <mat-icon>edit</mat-icon>\r\n                    </div>\r\n                </mat-chip>\r\n                <mat-chip color=\"accent\" (click)=\"editLink(model.links.length)\">\r\n                    <span>Add link</span>\r\n                </mat-chip>\r\n            </mat-chip-list>\r\n\r\n            <div class=\"step-nav\">\r\n                <button mat-button matStepperPrevious>Back</button>\r\n                <button mat-button matStepperNext>Next</button>\r\n            </div>\r\n        </form>\r\n    </mat-step>\r\n    <mat-step [stepControl]=\"linkForm\">\r\n        <form class=\"step-form\" #linkForm=\"ngForm\" autocomplete=\"off\">\r\n            <ng-template matStepLabel>Publish</ng-template>\r\n            <mat-form-field>\r\n                <mat-label>Short link</mat-label>\r\n                <input matInput required pattern=\"[a-zA-Z0-9]*\" minlength=\"5\" maxlength=\"10\" id=\"link\" name=\"link\"\r\n                    [(ngModel)]=\"model.link\" (ngModelChange)=\"onLinkChange()\" #link=\"ngModel\" [disabled]=\"waitService.loading\" >\r\n                <mat-hint class=\"ellipsis\" align=\"start\">{{origin}}/{{model.link.length > 0 ? model.link : '...'}}</mat-hint>\r\n                <mat-hint class=\"solid\" align=\"end\">{{model.link.length}} / 10</mat-hint>\r\n\r\n                <mat-error *ngIf=\"link.errors?.linkTaken\">Link '{{model.link}}' is already taken</mat-error>\r\n                <mat-error *ngIf=\"(link.dirty || link.touched) && link.errors?.required\">Link is required</mat-error>\r\n                <mat-error *ngIf=\"(link.dirty || link.touched) && link.errors?.pattern && !link.errors?.required\">\r\n                    Link contains invalid characters\r\n                </mat-error>\r\n                <mat-error *ngIf=\"(link.dirty || link.touched) && link.errors?.minlength && !(link.errors?.required || link.errors?.pattern)\">\r\n                    Link must be at least 5 characters long\r\n                </mat-error>\r\n                <mat-error *ngIf=\"(link.dirty || link.touched) && link.errors?.maxlength && !link.errors?.pattern\">\r\n                    Link must not be longer than 10 characters\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <div class=\"step-nav\">\r\n                <button mat-button matStepperPrevious>Back</button>\r\n                <button mat-button (click)=\"onSubmit()\" [disabled]=\"waitService.loading\">Done</button>\r\n            </div>\r\n        </form>\r\n    </mat-step>\r\n</mat-horizontal-stepper>\r\n\r\n<mat-vertical-stepper *ngIf=\"mobile\" [linear]=\"true\" (selectionChange)=\"onStepperSelectionChange($event)\">\r\n    <mat-step [stepControl]=\"nameForm\">\r\n        <form class=\"step-form\" #nameForm=\"ngForm\" autocomplete=\"off\">\r\n            <ng-template matStepLabel>Fill out name</ng-template>\r\n            <mat-form-field>\r\n                <mat-label>Name</mat-label>\r\n                <input matInput required maxlength=\"20\" id=\"name\" name=\"name\" [(ngModel)]=\"model.name\"\r\n                    #name=\"ngModel\" [disabled]=\"waitService.loading\">\r\n                <mat-hint align=\"start\">Full name or nickname</mat-hint>\r\n                <mat-hint align=\"end\">{{model.name.length}} / 20</mat-hint>\r\n                <mat-error *ngIf=\"(name.dirty || name.touched) && name.errors?.required\">Name is required\r\n                </mat-error>\r\n                <mat-error *ngIf=\"(name.dirty || name.touched) && name.errors?.maxlength\">Name must not be longer\r\n                    than 20 characters</mat-error>\r\n            </mat-form-field>\r\n            <div class=\"step-nav\">\r\n                <button mat-button matStepperNext>Next</button>\r\n            </div>\r\n        </form>\r\n    </mat-step>\r\n    <mat-step [stepControl]=\"annotationForm\">\r\n        <form class=\"step-form\" #annotationForm=\"ngForm\" autocomplete=\"off\">\r\n            <ng-template matStepLabel>Fill out annotation</ng-template>\r\n            <mat-form-field>\r\n                <mat-label>Annotation</mat-label>\r\n                <input matInput required maxlength=\"80\" id=\"annotation\" name=\"annotation\" [(ngModel)]=\"model.annotation\"\r\n                    #annotation=\"ngModel\" [disabled]=\"waitService.loading\">\r\n                <mat-hint align=\"start\">Speciality, profession, etc.</mat-hint>\r\n                <mat-hint align=\"end\">{{model.annotation.length}} / 80</mat-hint>\r\n\r\n                <mat-error *ngIf=\"(annotation.dirty || annotation.touched) && annotation.errors?.required\">Annotation is\r\n                    required</mat-error>\r\n                <mat-error *ngIf=\"(annotation.dirty || annotation.touched) && annotation.errors?.maxlength\">Annotation\r\n                    must not be longer than 80 characters</mat-error>\r\n            </mat-form-field>\r\n            <div class=\"step-nav\">\r\n                <button mat-button matStepperPrevious>Back</button>\r\n                <button mat-button matStepperNext>Next</button>\r\n            </div>\r\n        </form>\r\n    </mat-step>\r\n    <mat-step [stepControl]=\"linksForm\">\r\n        <form class=\"step-form\" #linksForm=\"ngForm\" autocomplete=\"off\">\r\n            <ng-template matStepLabel>Add links</ng-template>\r\n\r\n            <mat-chip-list>\r\n                <mat-chip *ngFor=\"let link of model.links; index as i\" color=\"primary\" selected (click)=\"editLink(i)\">\r\n                    <span>{{link.title}}</span>\r\n                    <div class=\"edit-icon\">\r\n                        <mat-icon>edit</mat-icon>\r\n                    </div>\r\n                </mat-chip>\r\n                <mat-chip color=\"accent\" (click)=\"editLink(model.links.length)\">\r\n                    <span>Add link</span>\r\n                </mat-chip>\r\n            </mat-chip-list>\r\n\r\n            <div class=\"step-nav\">\r\n                <button mat-button matStepperPrevious>Back</button>\r\n                <button mat-button matStepperNext>Next</button>\r\n            </div>\r\n        </form>\r\n    </mat-step>\r\n    <mat-step [stepControl]=\"linkForm\">\r\n        <form class=\"step-form\" #linkForm=\"ngForm\" autocomplete=\"off\">\r\n            <ng-template matStepLabel>Publish</ng-template>\r\n            <mat-form-field>\r\n                <mat-label>Short link</mat-label>\r\n                <input matInput required pattern=\"[a-zA-Z0-9]*\" minlength=\"5\" maxlength=\"10\" id=\"link\" name=\"link\"\r\n                    [(ngModel)]=\"model.link\" (ngModelChange)=\"onLinkChange()\" #link=\"ngModel\" [disabled]=\"waitService.loading\" >\r\n                <mat-hint class=\"ellipsis\" align=\"start\">{{origin}}/{{model.link.length > 0 ? model.link : '...'}}</mat-hint>\r\n                <mat-hint class=\"solid\" align=\"end\">{{model.link.length}} / 10</mat-hint>\r\n\r\n                <mat-error *ngIf=\"link.errors?.linkTaken\">Link '{{model.link}}' is already taken</mat-error>\r\n                <mat-error *ngIf=\"(link.dirty || link.touched) && link.errors?.required\">Link is required</mat-error>\r\n                <mat-error *ngIf=\"(link.dirty || link.touched) && link.errors?.pattern && !link.errors?.required\">\r\n                    Link contains invalid characters\r\n                </mat-error>\r\n                <mat-error *ngIf=\"(link.dirty || link.touched) && link.errors?.minlength && !(link.errors?.required || link.errors?.pattern)\">\r\n                    Link must be at least 5 characters long\r\n                </mat-error>\r\n                <mat-error *ngIf=\"(link.dirty || link.touched) && link.errors?.maxlength && !link.errors?.pattern\">\r\n                    Link must not be longer than 10 characters\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <div class=\"step-nav\">\r\n                <button mat-button matStepperPrevious>Back</button>\r\n                <button mat-button (click)=\"onSubmit()\" [disabled]=\"waitService.loading\">Done</button>\r\n            </div>\r\n        </form>\r\n    </mat-step>\r\n</mat-vertical-stepper>","import { Component, OnInit, HostListener, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { Link } from '../../../models/link';\r\nimport { NgForm } from '@angular/forms';\r\nimport { CardService } from 'src/app/services/card.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { WaitService } from 'src/app/services/wait.service';\r\nimport { Card } from 'src/app/models/card';\r\nimport { LinkDialogComponent } from '../link-dialog/link-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-cards-new',\r\n  styleUrls: ['./cards-new.component.css'],\r\n  templateUrl: './cards-new.component.html'\r\n})\r\nexport class CardsNewComponent implements OnInit {\r\n  public origin: string = window.location.origin;\r\n  \r\n  public model: Card = new Card();\r\n  public mobile: boolean;\r\n\r\n  @ViewChild('linksForm') linksForm: NgForm;\r\n  @ViewChild('linkForm') linkForm: NgForm;\r\n\r\n  @Output() isEditing = new EventEmitter<boolean>();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public waitService: WaitService,\r\n    private cardService: CardService,\r\n    private userService: UserService,\r\n    public dialog: MatDialog\r\n  ) {\r\n    this.onResize();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  editLink(i) {\r\n    if (!this.waitService.loading) {\r\n\r\n      let edit = true;\r\n\r\n      if (this.model.links.length === i) {\r\n        edit = false;\r\n      }\r\n\r\n      const dialogRef = this.dialog.open(LinkDialogComponent, {\r\n        width: '300px',\r\n        disableClose: true,\r\n        data: { model: edit ? Object.assign({}, this.model.links[i]) : new Link(), edit: edit }\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if (result) {\r\n          if (result.model)\r\n            this.model.links[i] = result.model;\r\n          else\r\n            this.model.links.splice(i, 1);\r\n\r\n          this.validateLinksForm();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onStepperSelectionChange(event: any) {\r\n    if (event.selectedIndex == 2)\r\n      this.validateLinksForm();\r\n  }\r\n\r\n  validateLinksForm() {\r\n    if (this.model.links.length < 1)\r\n      this.linksForm.control.setErrors({ 'incorrect': true });\r\n    else\r\n      this.linksForm.control.setErrors(null);\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.linkForm.valid) {\r\n      this.isEditing.emit(true);\r\n      this.waitService.loading = true;\r\n\r\n      this.cardService.create(this.model).subscribe(() => {\r\n        this.userService.currentUser.cards.unshift(this.model);\r\n        this.cardService.currentCard = this.model;\r\n\r\n        this.waitService.loading = false;\r\n        this.isEditing.emit(false);\r\n        this.router.navigate([this.model.link]);\r\n      }, (error: HttpErrorResponse) => {\r\n        this.waitService.loading = false;\r\n        this.isEditing.emit(false);\r\n\r\n        if (error.status === 400) {\r\n          this.linkForm.controls['link'].enable();\r\n          this.linkForm.controls['link'].setErrors({ 'linkTaken': true });\r\n        }\r\n        else if (error.status === 404)\r\n          this.userService.logOut();\r\n\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  onLinkChange() {\r\n    if (this.linkForm.controls['link'].hasError('linkTaken'))\r\n      this.linkForm.controls['link'].setErrors({ 'linkTaken': false });\r\n  }\r\n\r\n  @HostListener('window:resize')\r\n  onResize() {\r\n    this.mobile = window.innerWidth <= 800;\r\n  }\r\n\r\n}\r\n","<div class=\"dialog\">\r\n    <div class=\"dialog__message\">Are you sure you want to delete '{{name}}' card?</div>\r\n\r\n    <div class=\"dialog__row\">\r\n        <div class=\"spacer\"></div>\r\n        <button mat-raised-button color=\"accent\" (click)=\"onCancel()\">No</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"onConfirm()\">Yes</button>\r\n    </div>\r\n</div>","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-dialog',\r\n  templateUrl: './delete-dialog.component.html'\r\n})\r\nexport class DeleteDialogComponent {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public name: string\r\n  ) { }\r\n\r\n  onConfirm() {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n  onCancel() {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n","<div class=\"dialog\">\r\n    <div class=\"dialog__title\">\r\n        {{data.edit ? 'Edit link' : 'New link'}}\r\n    </div>\r\n    <form #linkForm=\"ngForm\" class=\"dialog__form\" autocomplete=\"off\" (submit)=\"onSubmit()\">\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Title</mat-label>\r\n            <input matInput id=\"title\" name=\"title\" [(ngModel)]=\"data.model.title\" #title=\"ngModel\" required maxlength=\"10\">\r\n            <mat-hint align=\"end\">{{data.model.title.length}} / 10</mat-hint>\r\n            <mat-error *ngIf=\"title.errors?.required\">Title is required</mat-error>\r\n            <mat-error *ngIf=\"title.errors?.maxlength\">Title must not be longer than 10 characters</mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>URL</mat-label>\r\n            <input matInput id=\"url\" name=\"url\" [(ngModel)]=\"data.model.url\" #url=\"ngModel\" required>\r\n            <mat-error *ngIf=\"url.errors?.required\">URL is required</mat-error>\r\n        </mat-form-field>\r\n  \r\n        <div class=\"dialog__row\">\r\n            <mat-icon class=\"delete-icon\" *ngIf=\"data.edit\" color=\"accent\" (click)=\"onDelete()\">delete</mat-icon>\r\n            <div class=\"spacer\"></div>\r\n            <button type=\"button\" mat-raised-button color=\"accent\" (click)=\"onClose()\">Cancel</button>\r\n            <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"linkForm.invalid\">Done</button>\r\n        </div>\r\n  \r\n        \r\n    </form>\r\n  </div>","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Link } from 'src/app/models/link';\r\n\r\nexport interface DialogData {\r\n  model: Link;\r\n  edit: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-link-dialog',\r\n  templateUrl: './link-dialog.component.html'\r\n})\r\nexport class LinkDialogComponent {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<LinkDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) { }\r\n\r\n  onSubmit() {\r\n    this.dialogRef.close(this.data);\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onDelete() {\r\n    let _data = Object.assign({}, this.data);\r\n    _data.model = null;\r\n    this.dialogRef.close(_data);\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"!waitService.loading || editing\" class=\"profile\">\r\n    <div class=\"profile__inner\">\r\n        <div class=\"profile__row\">\r\n            <div class=\"profile__title\">\r\n                Welcome, <br><span>{{userService.currentUser.name}}</span>!\r\n            </div>\r\n            <button class=\"profile__logout\" mat-raised-button color=\"primary\" (click)=\"onLogOut()\">Log out</button>\r\n        </div>\r\n        \r\n        <mat-tab-group dynamicHeight class=\"profile__navbar\" [selectedIndex]=\"tabIndex\" (selectedIndexChange)=\"tabIndex = $event\">\r\n            <mat-tab label=\"My cards\">\r\n                <app-cards-list (isEditing)=\"isEditingChanged($event)\" (onZeroCreate)=\"onZeroCreate()\"></app-cards-list>\r\n            </mat-tab>\r\n            <mat-tab label=\"Create new card\">\r\n                <app-cards-new (isEditing)=\"isEditingChanged($event)\"></app-cards-new>\r\n            </mat-tab>\r\n        </mat-tab-group>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { HideService } from 'src/app/services/hide.service';\r\nimport { User } from 'src/app/models/user';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { WaitService } from 'src/app/services/wait.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  styleUrls: ['./profile.component.css'],\r\n  templateUrl: './profile.component.html'\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  public tabIndex: number = 0;\r\n  public editing: boolean = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public userService: UserService,\r\n    public waitService: WaitService,\r\n    private hideService: HideService\r\n  ) {\r\n    this.hideService.hide = false;\r\n    if (!this.userService.currentUser) {\r\n      this.router.navigate(['signin']);\r\n    }\r\n\r\n    if (this.userService.currentUser.name === '')\r\n      this.waitService.loading = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.get().subscribe((user: User) => {\r\n      this.userService.currentUser = user;\r\n      this.waitService.loading = false;\r\n    }, () => {\r\n      this.waitService.loading = false;\r\n      this.onLogOut();\r\n    });\r\n  }\r\n\r\n  onLogOut() {\r\n    this.userService.logOut();\r\n  }\r\n\r\n  onZeroCreate() {\r\n    this.tabIndex = 1;\r\n  }\r\n\r\n  isEditingChanged(editing: boolean) {\r\n    this.editing = editing;\r\n  }\r\n\r\n}\r\n","import { Link } from './link';\r\n\r\nexport class Card {\r\n    public link: string = '';\r\n    public name: string = '';\r\n    public annotation: string = '';\r\n    public links: Link[] = [];\r\n}\r\n","export class Link {\r\n    public title: string = '';\r\n    public url: string = '';\r\n}\r\n","import { Card } from './card';\r\n\r\nexport class User {\r\n    public name: string = '';\r\n    public cards: Card[] = [];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public signIn(model: any) {\r\n    return this.http.post('api/auth/signin', model);\r\n  }\r\n\r\n  public signUp(model: any) {\r\n    return this.http.post('api/auth/signup', model);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Card } from '../models/card';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CardService {\r\n  public currentCard: Card;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public create(model: any) {\r\n    return this.http.post('api/cards/create', model);\r\n  }\r\n\r\n  public update(model: any) {\r\n    return this.http.post('api/cards/update', model);\r\n  }\r\n\r\n  public delete(link: string) {\r\n    return this.http.delete('api/cards/delete/' + link);\r\n  }\r\n\r\n  public get(link: string) {\r\n    return this.http.get('api/cards/get/' + link);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HideService {\r\n  public hide: boolean = false;\r\n\r\n  constructor() { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../models/user';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  public currentUser: User;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private http: HttpClient\r\n    ) { }\r\n\r\n  public get() {\r\n    return this.http.get('api/profile/get');\r\n  }\r\n\r\n  public logOut() {\r\n    localStorage.removeItem('auth_token');\r\n    this.currentUser = null;\r\n    this.router.navigate(['']);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WaitService {\r\n  public loading: boolean = false;\r\n\r\n  constructor() { }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}